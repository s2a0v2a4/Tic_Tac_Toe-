{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\r\nTo dos\r\nElemente aus dem DOM auslesen\r\nEvent-Listener (  forEach()...  )\r\nclicked felder\r\nSpielerwechsel nach jedem Zug\r\nGewinnpr\u00FCfen\r\nUnentschieden\r\nStatusanzeige\r\nSpiel zur\u00FCcksetzen (Neustart-Button)\r\nHover-Effekt korrekt anzeigen\r\nSpieldaten LC speichern\r\nLC laden\r\n*/\r\n\r\nconst spielfelder = document.querySelectorAll<HTMLButtonElement>(\".feld\");\r\nconst statusAnzeige = document.querySelector<HTMLHeadingElement>(\"#status\");\r\nconst neustartButton = document.querySelector<HTMLButtonElement>(\"#neustartBtn\");\r\n\r\nconst gewinnMuster = [\r\n    [0, 1, 2], [3, 4, 5], [6, 7, 8],\r\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\r\n    [0, 4, 8], [2, 4, 6]\r\n\r\n];\r\n\r\nlet spielStand: string[] = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\nlet aktuellerSpielerName: string = \"X\"; //// Math.random() < 0.5 ? \"X\" : \"0\"\r\nlet spielLaueft: boolean = true;\r\n\r\nfunction spielstandSpeichern() {\r\n    const spielDaten = {\r\n        board: spielStand,\r\n        aktuellerSpieler: aktuellerSpielerName,\r\n        spielLaueft\r\n\r\n    };\r\n    localStorage.setItem(\"tik-tak-toe\", JSON.stringify(spielDaten)); ///speicheert\r\n}\r\n\r\n/*\r\nconst nameInput = document.querySelector<HTMLInputElement>(\"#nameInput\");\r\nconst speichernBtn = document.querySelector<HTMLButtonElement>(\"#speichernBtn\");\r\nconst loeschenBtn = document.querySelector<HTMLButtonElement>(\"#loeschenBtn\");\r\nconst anzeigeName = document.querySelector<HTMLSpanElement>(\"#anzeigeName\");\r\n\r\nfunction speicherName() {\r\n    if (nameInput && nameInput.value) {\r\n        localStorage.setItem(\"benutzername\", nameInput.value);\r\n        aktualisiereAnzeige();\r\n    }\r\n}\r\n\r\nfunction ladeName() {\r\n    const gespeicherterName = localStorage.getItem(\"benutzername\") || \"Gast\";\r\n    if (anzeigeName) anzeigeName.textContent = gespeicherterName;\r\n}\r\n\r\nfunction loescheName() {\r\n    localStorage.removeItem(\"benutzername\");\r\n    aktualisiereAnzeige();\r\n}\r\n\r\nfunction aktualisiereAnzeige() {\r\n    if (anzeigeName) anzeigeName.textContent = localStorage.getItem(\"benutzername\") || \"Gast\";\r\n    if (nameInput) nameInput.value = \"\";\r\n}\r\n\r\nspeichernBtn?.addEventListener(\"click\", speicherName);\r\nloeschenBtn?.addEventListener(\"click\", loescheName);\r\n\r\nladeName();\r\n\r\n\r\n\r\n */\r\n////lokal laden\r\nfunction spielstandLaden() {\r\n    const gespeicherteDaten = localStorage.getItem(\"tik-tak-toe\");\r\n    if (gespeicherteDaten) { ////fall z\u00FCge existieren werden sie geladen\r\n        const spielDaten = JSON.parse(gespeicherteDaten);\r\n        spielStand = spielDaten.board;\r\n        aktuellerSpielerName = spielDaten.aktuellerSpieler;\r\n        spielLaueft = spielDaten.spielLaueft;\r\n\r\n        spielfelder.forEach((feld, index) => {////f\u00FCr jedes feld im index\r\n            feld.textContent = spielStand[index]; //// Xe Os in den index\r\n        });\r\n\r\n        if (statusAnzeige) {\r\n            statusAnzeige.textContent = spielLaueft\r\n                ? `Spieler ${aktuellerSpielerName} ist am Zug`\r\n                : \"Diese Runde ist beendet\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction spielStarten() {\r\n    if (!statusAnzeige || !neustartButton) {\r\n        console.error(\"Ein HTML-Element wurde nicht gefunden!\");\r\n        return;\r\n    }\r\n\r\n    spielstandLaden();\r\n    spielfelder.forEach((feld, index) => {\r\n        feld.setAttribute(\"data-index\", index.toString());\r\n        feld.addEventListener(\"click\", feldGeklickt);\r\n        feld.addEventListener(\"mouseenter\", hoverEffekt);\r\n        feld.addEventListener(\"mouseleave\", hoverEntfernen);\r\n    });\r\n\r\n    neustartButton.addEventListener(\"click\", spielZuruecksetzen);\r\n}\r\n\r\n/*\r\n*/\r\nfunction feldGeklickt(this: HTMLButtonElement) {\r\n    const feldIndex = parseInt(this.getAttribute(\"data-index\") || \"-1\");\r\n\r\n    if (spielStand[feldIndex] !== \"\" || !spielLaueft) {\r\n        return;\r\n    }\r\n    ///\r\n\r\n    feldMarkieren(this, feldIndex);\r\n    gewinnCheck();\r\n}\r\n\r\nfunction feldMarkieren(feld: HTMLButtonElement, index: number) {\r\n    spielStand[index] = aktuellerSpielerName;\r\n\r\n    feld.textContent = aktuellerSpielerName;\r\n    feld.classList.remove(\"vorschauX\", \"vorschauO\");\r\n    spielstandSpeichern();\r\n}\r\n\r\nfunction spielerWechseln() {\r\n    if (!statusAnzeige) return;\r\n    aktuellerSpielerName = aktuellerSpielerName === \"X\" ? \"O\" : \"X\";\r\n    statusAnzeige.textContent = `Spieler ${aktuellerSpielerName} ist am Zug`;\r\n}\r\n\r\nfunction gewinnCheck() {\r\n    let siegGefunden = false;\r\n\r\n    for (const muster of gewinnMuster) {\r\n        const [m, n, c] = muster;\r\n        if (spielStand[m] && spielStand[m] === spielStand[n] && spielStand[m] === spielStand[c]) {\r\n            siegGefunden = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (statusAnzeige) {\r\n        if (siegGefunden) {\r\n            statusAnzeige.textContent = `Spieler ${aktuellerSpielerName} hat gewonnen!`;\r\n            spielLaueft = false;\r\n        } else\r\n        if (!spielStand.some(feld => feld === \"\")) {\r\n            statusAnzeige.textContent = \"Unentschieden!\";\r\n            spielLaueft = false;\r\n        } else {\r\n            spielerWechseln();\r\n        }\r\n    }\r\n    spielstandSpeichern();\r\n}\r\n\r\nfunction spielZuruecksetzen() {\r\n    if (!statusAnzeige) return;\r\n\r\n    spielStand.fill(\"\");\r\n    spielfelder.forEach(feld => {\r\n        feld.textContent = \"\";\r\n        feld.classList.remove(\"vorschauX\", \"vorschauO\");\r\n    });\r\n\r\n    aktuellerSpielerName = \"X\";\r\n    spielLaueft = true;\r\n    statusAnzeige.textContent = `Spieler ${aktuellerSpielerName} ist am Zug`;\r\n\r\n    localStorage.removeItem(\"tik-tak-toe\");\r\n}\r\n\r\nfunction hoverEffekt(this: HTMLButtonElement) {\r\n    if (!spielLaueft) return;\r\n\r\n    const feldIndex = parseInt(this.getAttribute(\"data-index\") || \"-1\");\r\n    if (spielStand[feldIndex] === \"\") {\r\n        this.classList.add(aktuellerSpielerName === \"X\" ? \"vorschauX\" : \"vorschauO\");\r\n    }\r\n}\r\n\r\nfunction hoverEntfernen(this: HTMLButtonElement) {\r\n    if (!spielLaueft) return;\r\n\r\n    this.classList.remove(\"vorschauX\", \"vorschauO\");\r\n}\r\n\r\nspielStarten();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n////return funktion wenn... nicht existiert\r\n"],
  "mappings": "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",
  "names": []
}
